#!/usr/bin/env python3
"""Script para testar credenciais de login espec√≠ficas."""

import asyncio
import traceback

from fast_zero.async_auth import authenticate_user, verify_password
from fast_zero.async_services import get_async_user_service
from fast_zero.database import get_async_session


async def test_login_credentials():
    """Testa as credenciais espec√≠ficas do usu√°rio."""
    username = 'digomes'
    password = 'E@#$%^&12(),.?":{}|<!a'

    print('Testando credenciais:')
    print(f"Usu√°rio: '{username}'")
    print(f"Senha: '{password}'")
    print(f'Comprimento da senha: {len(password)} caracteres')
    print()

    # Obter sess√£o do banco de dados
    async for session in get_async_session():
        try:
            # Testar autentica√ß√£o
            user = await authenticate_user(session, username, password)

            if user:
                print('‚úÖ AUTENTICA√á√ÉO BEM-SUCEDIDA!')
                print(f'ID do usu√°rio: {user.id}')
                print(f'Username: {user.username}')
                print(f'Email: {user.email}')
                print(f'Ativo: {user.is_active}')
                print(f'Verificado: {user.is_verified}')
            else:
                print('‚ùå FALHA NA AUTENTICA√á√ÉO')

                # Vamos investigar mais detalhadamente
                user_service = get_async_user_service(session)
                user_from_db = await user_service.get_user_by_username(
                    username
                )

                if user_from_db:
                    print('\nüîç Usu√°rio encontrado no banco:')
                    print(f'ID: {user_from_db.id}')
                    print(f'Username: {user_from_db.username}')
                    print(f'Email: {user_from_db.email}')
                    print(f'Ativo: {user_from_db.is_active}')
                    print(f'Verificado: {user_from_db.is_verified}')
                    print(f'Hash da senha: {user_from_db.password[:50]}...')

                    # Testar verifica√ß√£o de senha diretamente
                    password_match = verify_password(
                        password, user_from_db.password
                    )
                    match_text = (
                        '‚úÖ MATCH' if password_match else '‚ùå NO MATCH'
                    )
                    print(f'\nüîê Verifica√ß√£o direta da senha: {match_text}')

                    if not password_match:
                        print(
                            '\n‚ö†Ô∏è  A senha n√£o confere com o hash armazenado!'
                        )
                        print('Isso pode indicar que:')
                        print('1. A senha foi alterada ap√≥s o cadastro')
                        print('2. Houve problema no hash durante o cadastro')
                        print('3. A senha digitada est√° incorreta')
                else:
                    print(f"\n‚ùå Usu√°rio '{username}' n√£o encontrado no banco")

        except Exception as e:
            print(f'‚ùå ERRO durante o teste: {e}')
            traceback.print_exc()

        break  # Sair do loop async for


if __name__ == '__main__':
    asyncio.run(test_login_credentials())
