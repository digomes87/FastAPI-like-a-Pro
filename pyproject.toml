[tool.poetry]
name = "fast-zero"
version = "0.1.0"
description = ""
authors = ["Diego Go <diego.gomes87@gmail.com>"]
readme = "README.md"
packages = [{include = "fast_zero"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["standard"], version = "^0.116.1"}
pydantic-settings = "^2.10.1"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.42"}
alembic = "^1.16.4"
python-multipart = "^0.0.20"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
asyncpg = "^0.30.0"
httpx = "^0.27.0"
authlib = "^1.3.0"
psycopg2-binary = "^2.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
taskipy = "^1.14.1"
ruff = "^0.12.7"
pytest-asyncio = "^1.1.0"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']
ignore = [
    'PLR6301',  # Method could be a function (pytest methods)
    'PLR0913',  # Too many arguments
    'PLR2004',  # Magic value used in comparison
    'PT011',    # pytest.raises without match
]

[tool.ruff.format]
preview = true
quote-style = 'single'


[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_mode = "auto"

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev fast_zero/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'
